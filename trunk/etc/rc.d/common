# $Id$

RC_D_PREFIX="/etc/rc.d"
STOP_TIMEOUT=120

# User settable services; started in this order and reversed on shutdown
EARLY_SERVICES="rc.openibd rc.opensm"
LATE_SERVICES="rc.sshd rc.mdraid rc.lvm2 rc.eio rc.dmcache rc.drbd rc.corosync rc.dlm rc.clvmd rc.pacemaker rc.fsmount rc.mhvtl rc.scst rc.perfagent rc.nrpe"

# Check if the service is enabled, or not
check_enabled() {
    rc_conf_line="$(/bin/egrep ^${1}_enable /etc/rc.conf)"
    if [ ${?} -eq 0 ]; then
        on_off="$(/bin/echo ${rc_conf_line} | /usr/bin/cut -d= -f2 | /usr/bin/tr -d ' ')"
        case ${on_off} in
            # "yes", "true", "on", or "1"
        [Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1)
            return 0
            ;;
            # "no", "false", "off", or "0"
        [Nn][Oo]|[Ff][Aa][Ll][Ss][Ee]|[Oo][Ff][Ff]|0)
            return 1
            ;;
        *)
            /bin/echo "The value for ${1}_enable is not set properly!"
            return 1
            ;;
        esac
    else
        return 1
    fi
}

# Wait for a daemon to stop
wait_for_stop() {
    timer=0
    rc=1
    while [ ${timer} -lt ${STOP_TIMEOUT} ]; do
        pid=$(/bin/pidof ${1} > /dev/null 2>&1)
        if [ ${?} -eq 0 ]; then
            /bin/sleep 1
            timer=$(/usr/bin/expr ${timer} + 1)
            continue
        else
            rc=0
            break
        fi
    done
    return ${rc}
}

