#summary Configuring your back-storage: RAID volumes, file systems, virtual disk files, etc.

=== Getting Started ===
There are two broad steps when provisioning storage with ESOS: The first is configuring your back-end storage device which is typically a high-end RAID controller, or virtual disk files on file systems, or can be anything else that appears as a SCSI block device in Linux. Enterprise Storage OS includes a number of different Linux block device subsystems such as DRBD, Linux software RAID (md), and LVM2 so the possibilities are quite endless.

The second step is configuring your front side target devices, the targets that are made available via your SAN. _This will be covered in the subsequent ESOS wiki pages (devices, targets, and hosts/initiators)._

<br>

=== RAID Controller TUI Functions ===
ESOS has limited support for provisioning/configuring logical drives via the TUI. Currently only LSI Logic MegaRAID adapters are supported using the TUI logical drive / adapter functions. Using these functions requires the MegaCLI tool which is an option during the USB flash drive installation. Advanced adapter properties, multi-span logical drives, etc. are not supported.

A few basic RAID controller/adapter properties are configurable via the TUI: Back-End Storage -> Adapter Properties

Using the adapter information dialog (Back-End Storage -> Adapter Information) will allow you select a RAID controller and will display an overview of the attached storage (enclosures + devices).

To add a new logical drive (Back-End Storage -> Add Volume) you will first select the desired RAID adapter; next you will be presented with screen that contains the available disks. Select the disks and hit ENTER (or ESCAPE to cancel). On the final dialog, you will choose the RAID level, strip size, cache options, etc. and then hit 'OK' to proceed with provisioning the volume or 'Cancel' to do nothing and close the dialog.

Deleting volumes / logical drives (Back-End Storage -> Delete Volume) and modifying volume properties (Back-End Storage -> Volume Properties) is also possible via the TUI.

After you have configured your RAID logical drive(s), you can now proceed to the advanced back-end storage document, or below for creating a file system on the new device and adding virtual disks, or move on to adding your SCST device(s).

<br>

=== Back-End Storage File Systems ===
Once you have your back-end storage block device(s) configured, either using the basic methods described above, or an advanced block device (DRBD, LVM2, etc.) configured, you can then create a file system on these devices if you choose. The purpose of doing this would then allow you to use the SCST FILEIO mode for your devices. The FILEIO mode has a couple differences from the SCST BLOCKIO mode: 1) FILEIO mode takes full advantage of the Linux page cache, and 2) allows you to have multiple "virtual disk" devices on a single back-end storage block device.

While you may see better I/O performance when using FILEIO mode on systems with slower back-end storage, a big advantage is the ability to have multiple virtual disk files on a single block device (eg, RAID logical drive, DRBD device, md device, LVM2 device, etc.) in which each appear and function as an independent volume to the remote initiators.

Here is an example of such a configuration:
  * A RAID5 volume is configured consisting of (4) 3 TB disks giving you less than 9 TB of usable disk space.
  * You can now create a file system on this new logical drive (volume) and you have less than 9 TB of space to create various virtual disks.
  * Then you decide to create (3) 50 GB virtual disk files for your three new servers (eg, boot_host1, boot_host2, boot_host3).
  * Now you want some data volumes for each server: (2) 500 GB data volumes (eg, host2_data1, host2_data2); (3) 100 GB data volumes (eg, host3_data1, host3_data2, host3_data3).
  * You'll then have (8) virtual disk files (volumes) available to your servers with a single back-end storage block device.

Obviously your specific I/O requirements (performance, space, etc.) will all come into play on how many virtual disk files you can create on each back-end storage block device, but that should give you the general idea of this FILEIO mode concept.

Now, to create a file system on your newly configured back-end storage block device, go to the create-file-system dialog in the TUI (Back-End Storage -> Create File System). You'll be prompted to select a block device, and then on the next dialog screen you'll be show the current disk label layout (partition table) if any exists. Type a useful FS label name for the new file system, and choose the file system type (typically 'xfs' provides the best performance). Then hit 'OK' and a new GPT partition (disk label) will be created on the block device spanning the entire device and the new file system will be created on the first (only) partition. If prompted to mount the new file system, do so; your new file system is ready for virtual disk files, continue below.

You can also easily remove/delete file systems in the TUI (Back-End Storage -> Remove File System). The file system will be unmounted and removed from the fstab file.

<br>

=== Virtual Disk Files ===
TODO

<br>

=== What's Next ===
TODO