#summary Setting up after the first boot.

=== The First Boot ===
At this point its assumed you have already inserted your USB flash drive into your storage server's USB port, set USB as the only boot device in the BIOS, and you are at the physical console and have a login prompt. If you're ESOS USB flash drive failed to boot for some reason, please let us know on the esos-users Google Group so we can help.

On the first boot, you may get messages saying something like "Superblock last write time is in the future." -- just hit 'y' to fix it. This happens typically because the time on your build machine is different than your ESOS storage server machine.

The first item on your agenda will be to login as root and change the root password.
  * Superuser account: root
  * Default password: esos

Next, *this is important*, you need to change the default root password:
{{{
passwd
}}}
Choose a nice hefty password, assuming this machine will be on your IP network, you don't want it to be susceptible to easy SSH brute-force attacks.

_The only normal, interactive editor that is installed on ESOS is "vi"._ For a handy `vi` cheat sheet, see [http://www.lagmonster.org/docs/vi.html this] page.

Setting the system host name is also a good idea; change the default (localhost) in the file "/etc/hostname". Then append the new host name to each loopback interface (IPv4 + IPv6) line in the "/etc/hosts" file.

** Since the ESOS image (binaries, config. files, etc.) is loaded into RAM on boot, *it is important that you sync your configuration* to the USB flash drive by using the `conf_sync.sh` command. There is a cron job setup to run `conf_sync.sh` every so often, but it should be good practice to always run `conf_sync.sh` after making configuration changes. **

<br>

=== Networking ===
Next, you will want to configure your network interface(s). The "network configuration file" is really just a shell script that runs any commands you put in it. The configuration file is located here: /etc/network

So, to configure an interface using DHCP, you would have a line similar to this:
{{{
udhcpc -i eth0
}}}
To configure a network interface with a static IP and default gateway, use this:
{{{
ifconfig eth0 192.168.0.10 broadcast 192.168.0.255 netmask 255.255.255.0
route add -net default gw 192.168.0.1 netmask 0.0.0.0
}}}
If you are using static IPs, be sure to edit '/etc/resolv.conf' for your environment:
{{{
search host.domain
nameserver 192.168.0.11
nameserver 192.168.0.12
}}}

Once your '/etc/network' file is configured, you can start the network by using this command:
{{{
sh /etc/network
}}}

<br>

=== Mail Setup ===
It is highly recommended to configure mail (SMTP) on your ESOS storage server. Email messages are sent by many daemons in ESOS to communicate informational messages, warnings, errors, etc. ESOS uses sSMTP for sendmail -- it can only send mail, you cannot receive mail in ESOS. sSMTP in ESOS supports SSL/TLS encrypted connections to your SMTP host.

The two configuration files for sSMTP, `ssmtp.conf` and `revaliases` are both located in /etc (not /etc/ssmtp). An example is provided below for configuring sSMTP with a Gmail account.

This is what the `/etc/ssmtp.conf` configuration file (uncommented lines shown) should look like for a Gmail account:
{{{
root=username@gmail.com
mailhub=smtp.gmail.com:587
rewriteDomain=
hostname=_HOSTNAME_
FromLineOverride=NO
AuthUser=username@gmail.com
AuthPass=password
AuthMethod=CRAM-MD5
UseSTARTTLS=YES
}}}

You can then test mail by using the `ssmtp` command; type a test message and then hit CTRL-D.
{{{
ssmtp username@gmail.com
}}}
If you encounter any problems, consult /var/log/mail.`*` for help.

<br>

=== Kernel Modules ===
The ESOS kernels (production / debug) are built with most drivers built-in. Generally the HBA, HCA, etc. drivers are left as modules in case the user would like to tweak any parameters via module options. The SCST core, device handlers, and target drivers are also modules.

If you do find you would like to customize any of the module parameters, you can create the file `/etc/modprobe.conf` (which will be sync'd to USB if it exists). Below is an example to see the format of the file, we are not recommending you use these settings, its just a sample.
{{{
options scst scst_threads=20
options ib_srpt srpt_sq_size=32
}}}

You can see the valid parameters for a module using the `modinfo` command. See the [http://scst.sourceforge.net SCST] documentation for possible information on tweaking any module parameters.

<br>

=== Extra Configuration ===
If you find that you need to run any extra commands on ESOS start-up, there are two files you can create/edit in /etc:
  * /etc/pre-scst_xtra_conf
  * /etc/post-scst_xtra_conf
These files can be treated as shell scripts; if either exists, they will be executed during start-up with `sh`.

The first file (/etc/pre-scst_xtra_conf) will be executed (if it exists) _before_ any part of SCST is loaded. An example of something you may want to run before loading SCST is adjust the read-ahead value for a back-storage block device (eg, `blockdev --setra 2048 /dev/sdb`).

The second file (/etc/post-scst_xtra_conf) will be executed (if it exists) _after_ SCST is fully loaded and configured. If you want to adjust the SMP IRQ affinity for the system, this would probably be a good place for it.

<br>

=== What's Next ===
From here, you can now SSH into your ESOS storage server, configure your back-storage and setup your targets. Continue with the [General_Usage] document.